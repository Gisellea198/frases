{"version":3,"sources":["components/QuoteBox.jsx","App.js","index.js"],"names":["QuoteBox","accentColor","handleNewQuote","currentQuote","quote","author","id","className","style","backgroundColor","Button","color","href","SvgIcon","component","TwitterIcon","fontSize","onClick","colorsArr","randomArrVal","arr","console","log","randomNum","Math","floor","random","length","useFetch","url","useState","data","setData","a","fetch","response","json","useEffect","fetchData","App","setAccentColor","quotes","setCurrentQuote","quoteArr","Spinner","animation","variant","role","ReactDOM","render","document","getElementById"],"mappings":"mSA6CeA,EAtCE,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,YAAaC,EAAmC,EAAnCA,eAAgBC,EAAmB,EAAnBA,aACvCC,EAAkBD,EAAlBC,MAAOC,EAAWF,EAAXE,OACf,OACE,sBACEC,GAAG,YACHC,UAAU,YACVC,MAAO,CAAEC,gBAAiB,UAH5B,UAKE,qBAAKF,UAAU,aAAf,SACE,uBAAMD,GAAG,OAAOC,UAAU,QAA1B,cACIH,EADJ,SAIF,qBAAKG,UAAU,eAAf,SACE,sBAAMD,GAAG,SAAT,SAAmBD,MAErB,sBAAKE,UAAU,UAAf,UACA,cAACG,EAAA,EAAD,CACIJ,GAAG,cACHC,UAAU,4BACVC,MAAO,CAAEG,MAAM,GAAD,OAAKV,IACnBW,KAAI,gDAA2CR,EAA3C,YAAoDC,EAApD,mBAJR,SAMI,cAACQ,EAAA,EAAD,CAASC,UAAWC,IAAaP,MAAO,CAAEQ,SAAU,QAEtD,cAACN,EAAA,EAAD,CACEJ,GAAG,YACHC,UAAU,uBACVU,QAAS,kBAAMf,KACfM,MAAO,CAAEC,gBAAgB,GAAD,OAAKR,IAJ/B,+B,QCvBFiB,EAAY,CAChB,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAGIC,EAAe,SAACC,GACpBC,QAAQC,IAAIF,GACZ,IAAIG,EAAYC,KAAKC,MAAMD,KAAKE,SAAWN,EAAIO,QAE/C,OADAN,QAAQC,IAAIF,EAAIG,IACTH,EAAIG,IAGPK,EAAW,SAACC,GAChB,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KADwB,4CAGxB,8BAAAC,EAAA,sEACyBC,MAAML,GAD/B,cACQM,EADR,gBAEqBA,EAASC,OAF9B,OAEQA,EAFR,OAGEJ,EAAQI,GAHV,4CAHwB,sBAYxB,OAHAC,qBAAU,YATc,mCAUtBC,KACC,CAACT,IACGE,GA6CMQ,EA1CH,WACV,MAAsCT,mBAAS,WAA/C,mBAAO7B,EAAP,KAAoBuC,EAApB,KACMC,EAASb,EAxCf,4IAyCA,EAAwCE,mBAAS,CAAEzB,OAAQ,GAAID,MAAO,KAAtE,mBAAOD,EAAP,KAAqBuC,EAArB,KAEMxC,EAAiB,WACrBsC,EAAe,IAAD,OAAKrB,EAAaD,KAChC,IAAIyB,EAAWF,EAAOA,OACtBC,EAAgBvB,EAAawB,KAS/B,OANAN,qBAAU,WACJI,GACFvC,MAED,CAACuC,IAGF,qBACElC,UAAU,MACVC,MAAO,CAAEC,gBAAgB,GAAD,OAAKR,GAAeU,MAAM,GAAD,OAAKV,IAFxD,SAI0B,KAAvBE,EAAaC,MACZ,cAACwC,EAAA,EAAD,CACErC,UAAU,kBACVsC,UAAU,OACVC,QAAQ,QACRC,KAAK,SAJP,SAME,sBAAMxC,UAAU,UAAhB,0BAGF,cAAC,EAAD,CACEN,YAAaA,EACbE,aAAcA,EACdD,eAAgBA,OC3E1B8C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f7a646c3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport \"../styles/quoteBox.css\";\r\n\r\nconst QuoteBox = ({ accentColor, handleNewQuote, currentQuote }) => {\r\n  const { quote, author } = currentQuote;\r\n  return (\r\n    <div\r\n      id=\"quote-box\"\r\n      className=\"quote-box\"\r\n      style={{ backgroundColor: \"bisque\" }}\r\n    >\r\n      <div className=\"quote-text\">\r\n        <span id=\"text\" className=\"quote\">\r\n          \"{quote}\"\r\n        </span>\r\n      </div>\r\n      <div className=\"quote-author\">\r\n        <span id=\"author\">{author}</span>\r\n      </div>\r\n      <div className=\"buttons\">\r\n      <Button\r\n          id=\"tweet-quote\"\r\n          className=\"icon quote-btn transition\"\r\n          style={{ color: `${accentColor}` }}\r\n          href={`https://twitter.com/intent/tweet?text=${quote}-${author}&hashtags=quote`}\r\n        >\r\n          <SvgIcon component={TwitterIcon} style={{ fontSize: 60 }} />\r\n        </Button>\r\n        <Button\r\n          id=\"new-quote\"\r\n          className=\"quote-btn transition\"\r\n          onClick={() => handleNewQuote()}\r\n          style={{ backgroundColor: `${accentColor}` }}\r\n        >\r\n          Nueva Cita\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuoteBox;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles/app.css\";\nimport QuoteBox from \"./components/QuoteBox\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nconst quoteURL =\n  \"https://gist.githubusercontent.com/Gisellea198/7b04f1533c69d0aee3acecf4eab9a25e/raw/7b598e8dc3a1453b32fd47ebd29f9af83c0bd955/quotes.json\";\n\nconst colorsArr = [\n  \"435BF0\",\n  \"884BE3\",\n  \"F034AF\",\n  \"F5553F\",\n  \"F09F43\",\n  \"FA465E\",\n  \"46BBFA\",\n  \"29F560\",\n  \"184157\",\n  \"81F499\",\n  \"F0B718\",\n];\n\nconst randomArrVal = (arr) => {\n  console.log(arr);\n  let randomNum = Math.floor(Math.random() * arr.length);\n  console.log(arr[randomNum]);\n  return arr[randomNum];\n};\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n\n  async function fetchData() {\n    const response = await fetch(url);\n    const json = await response.json();\n    setData(json);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [url]);\n  return data;\n};\n\nconst App = () => {\n  const [accentColor, setAccentColor] = useState(\"#4FC1FF\");\n  const quotes = useFetch(quoteURL);\n  const [currentQuote, setCurrentQuote] = useState({ author: \"\", quote: \"\" });\n\n  const handleNewQuote = () => {\n    setAccentColor(`#${randomArrVal(colorsArr)}`);\n    let quoteArr = quotes.quotes;\n    setCurrentQuote(randomArrVal(quoteArr));\n  };\n\n  useEffect(() => {\n    if (quotes) {\n      handleNewQuote();\n    }\n  }, [quotes]);\n\n  return (\n    <div\n      className=\"App\"\n      style={{ backgroundColor: `${accentColor}`, color: `${accentColor}` }}\n    >\n      {currentQuote.quote === \"\" ? (\n        <Spinner\n          className=\"loading-spinner\"\n          animation=\"grow\"\n          variant=\"light\"\n          role=\"status\"\n        >\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      ) : (\n        <QuoteBox\n          accentColor={accentColor}\n          currentQuote={currentQuote}\n          handleNewQuote={handleNewQuote}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}